package com.wyzk.lottery.ui;

import android.content.Intent;
import android.os.Bundle;
import android.support.v7.widget.Toolbar;
import android.text.TextUtils;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.wyzk.lottery.R;
import com.wyzk.lottery.constant.IConst;
import com.wyzk.lottery.model.ResultReturn;
import com.wyzk.lottery.model.TokenModel;
import com.wyzk.lottery.model.UserInfoModel;
import com.wyzk.lottery.network.Network;
import com.wyzk.lottery.utils.ACache;
import com.wyzk.lottery.utils.AppUpdate;
import com.wyzk.lottery.utils.BuildManager;

import butterknife.Bind;
import butterknife.ButterKnife;
import butterknife.OnClick;
import rx.Observer;
import rx.android.schedulers.AndroidSchedulers;
import rx.schedulers.Schedulers;

public class LoginActivity extends BaseActivity {

    @Bind(R.id.edt_username)
    EditText edt_username;
    @Bind(R.id.edt_password)
    EditText edtPassword;
    @Bind(R.id.btn_login)
    Button btnLogin;
    @Bind(R.id.tv_register)
    TextView tvRegister;
    @Bind(R.id.tv_response)
    TextView tvResponse;
    @Bind(R.id.toolbar)
    Toolbar toolbar;

    @Bind(R.id.title)
    View title;
    final String userInfoKey = "userinfo";


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);
        ButterKnife.bind(this);
        toolbar.setTitle("");
        setSupportActionBar(toolbar);
//        BuildManager.setStatusTrans2(this);
        UserInfoModel cache = getSp(userInfoKey);
        if (cache != null) {
            edt_username.setText(cache.getUsername());
            edtPassword.setText(cache.getPassword());
        }
    }

    @OnClick({R.id.btn_login, R.id.tv_register})
    public void onClick(View view) {
        switch (view.getId()) {
            case R.id.btn_login:
                executeLogin();
                break;
            case R.id.tv_register:
                toActivity(RegisterActivity.class);
                break;
        }
    }

    private void executeLogin() {
        String username = edt_username.getText().toString().trim();
        String pwd = edtPassword.getText().toString().trim();
        if (TextUtils.isEmpty(username) || TextUtils.isEmpty(pwd)) {
            Toast.makeText(LoginActivity.this, getString(R.string.username_pwd_empty), Toast.LENGTH_SHORT).show();
            return;
        }
        showLoadingView();
        login(username, pwd);
    }

    private void login(final String username, final String password) {
        subscription = Network.getNetworkInstance().getUserApi()
                .login(username, password)
                .subscribeOn(Schedulers.io())
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(new Observer<ResultReturn<TokenModel>>() {
                    @Override
                    public void onCompleted() {
                    }

                    @Override
                    public void onError(Throwable e) {
                        dismissLoadingView();
                        Toast.makeText(LoginActivity.this, getString(R.string.login_fail), Toast.LENGTH_SHORT).show();
                    }

                    @Override
                    public void onNext(ResultReturn<TokenModel> result) {
                        if (result.getCode() == ResultReturn.ResultCode.RESULT_OK.getValue()) {
                            TokenModel tokenModel = result.getData();
                            ACache.get(LoginActivity.this).put(IConst.TOKEN, tokenModel.getToken());
                            ACache.get(LoginActivity.this).put(IConst.USERID, tokenModel.getUserId());
                            dismissLoadingView();
                            Toast.makeText(LoginActivity.this, getString(R.string.login_success), Toast.LENGTH_SHORT).show();
                            startActivity(new Intent(LoginActivity.this, MainActivity.class));
                            finish();
                            setSp(userInfoKey, new UserInfoModel(username, password));
                        } else {
                            dismissLoadingView();
                            Toast.makeText(LoginActivity.this, result.getMsg(), Toast.LENGTH_SHORT).show();
                        }
                    }
                });
    }

}
